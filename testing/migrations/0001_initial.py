# Generated by Django 4.2.23 on 2025-10-10 10:33

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('shift_log', '0024_alter_notification_notification_type'),
    ]

    operations = [
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Краткое описание функционала', max_length=300, verbose_name='Название функционала')),
                ('description', models.TextField(help_text='Подробное описание функционала', verbose_name='Описание')),
                ('status', models.CharField(choices=[('new', 'Новый'), ('testing', 'На тестировании'), ('rework', 'На доработке'), ('completed', 'Выполнено'), ('done', 'Завершено')], default='new', help_text='Текущий статус функционала', max_length=20, verbose_name='Статус')),
                ('priority', models.IntegerField(choices=[(1, 'Низкий'), (2, 'Средний'), (3, 'Высокий'), (4, 'Критический')], default=2, help_text='Приоритет функционала', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)], verbose_name='Приоритет')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('completed_at', models.DateTimeField(blank=True, help_text='Дата окончательного завершения', null=True, verbose_name='Дата завершения')),
                ('created_by', models.ForeignKey(help_text='Сотрудник, создавший функционал', on_delete=django.db.models.deletion.CASCADE, related_name='created_features', to='shift_log.employee', verbose_name='Создатель')),
            ],
            options={
                'verbose_name': 'Функционал',
                'verbose_name_plural': 'Функционал',
                'ordering': ['-priority', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TestProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Название тестового проекта', max_length=200, verbose_name='Название проекта')),
                ('description', models.TextField(blank=True, help_text='Подробное описание проекта', verbose_name='Описание')),
                ('is_active', models.BooleanField(default=True, help_text='Активен ли проект', verbose_name='Активен')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('created_by', models.ForeignKey(help_text='Сотрудник, создавший проект', on_delete=django.db.models.deletion.CASCADE, related_name='created_test_projects', to='shift_log.employee', verbose_name='Создатель')),
            ],
            options={
                'verbose_name': 'Тестовый проект',
                'verbose_name_plural': 'Тестовые проекты',
                'ordering': ['-created_at'],
                'unique_together': {('name', 'created_by')},
            },
        ),
        migrations.CreateModel(
            name='FeatureStatusHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_status', models.CharField(choices=[('new', 'Новый'), ('testing', 'На тестировании'), ('rework', 'На доработке'), ('completed', 'Выполнено'), ('done', 'Завершено')], max_length=20, verbose_name='Предыдущий статус')),
                ('new_status', models.CharField(choices=[('new', 'Новый'), ('testing', 'На тестировании'), ('rework', 'На доработке'), ('completed', 'Выполнено'), ('done', 'Завершено')], max_length=20, verbose_name='Новый статус')),
                ('comment', models.TextField(blank=True, help_text='Комментарий к изменению статуса', verbose_name='Комментарий')),
                ('changed_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата изменения')),
                ('changed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feature_status_changes', to='shift_log.employee', verbose_name='Изменил')),
                ('feature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_history', to='testing.feature', verbose_name='Функционал')),
            ],
            options={
                'verbose_name': 'История статуса функционала',
                'verbose_name_plural': 'История статусов функционала',
                'ordering': ['-changed_at'],
            },
        ),
        migrations.CreateModel(
            name='FeatureComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(help_text='Содержание замечания', verbose_name='Текст замечания')),
                ('comment_type', models.CharField(choices=[('remark', 'Замечание'), ('approval', 'Одобрение'), ('clarification', 'Уточнение')], default='remark', help_text='Тип комментария', max_length=20, verbose_name='Тип замечания')),
                ('is_resolved', models.BooleanField(default=False, help_text='Решено ли замечание', verbose_name='Решено')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('author', models.ForeignKey(help_text='Сотрудник, оставивший замечание', on_delete=django.db.models.deletion.CASCADE, related_name='feature_comments', to='shift_log.employee', verbose_name='Автор')),
                ('feature', models.ForeignKey(help_text='Функционал, к которому относится замечание', on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='testing.feature', verbose_name='Функционал')),
            ],
            options={
                'verbose_name': 'Замечание к функционалу',
                'verbose_name_plural': 'Замечания к функционалу',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FeatureAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(help_text='Загруженный файл', upload_to='testing/attachments/', verbose_name='Файл')),
                ('filename', models.CharField(help_text='Оригинальное имя файла', max_length=255, verbose_name='Имя файла')),
                ('content_type', models.CharField(help_text='MIME-тип файла', max_length=100, verbose_name='Тип контента')),
                ('file_size', models.IntegerField(help_text='Размер файла в байтах', verbose_name='Размер файла')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата загрузки')),
                ('feature', models.ForeignKey(help_text='Функционал, к которому относится вложение', on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='testing.feature', verbose_name='Функционал')),
                ('uploaded_by', models.ForeignKey(help_text='Сотрудник, загрузивший файл', on_delete=django.db.models.deletion.CASCADE, related_name='feature_attachments', to='shift_log.employee', verbose_name='Загружен')),
            ],
            options={
                'verbose_name': 'Вложение к функционалу',
                'verbose_name_plural': 'Вложения к функционалу',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.AddField(
            model_name='feature',
            name='test_project',
            field=models.ForeignKey(help_text='Проект, к которому относится функционал', on_delete=django.db.models.deletion.CASCADE, related_name='features', to='testing.testproject', verbose_name='Тестовый проект'),
        ),
    ]

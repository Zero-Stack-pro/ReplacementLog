# Generated by Django 4.2.23 on 2025-07-06 06:37

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название отдела')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Отдел',
                'verbose_name_plural': 'Отделы',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(choices=[('employee', 'Сотрудник'), ('supervisor', 'Руководитель'), ('admin', 'Администратор')], default='employee', max_length=20, verbose_name='Должность')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Телефон')),
                ('telegram_id', models.CharField(blank=True, max_length=50, verbose_name='Telegram ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shift_log.department', verbose_name='Отдел')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Сотрудник',
                'verbose_name_plural': 'Сотрудники',
                'ordering': ['user__last_name', 'user__first_name'],
            },
        ),
        migrations.CreateModel(
            name='Shift',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Дата смены')),
                ('is_completed', models.BooleanField(default=False, verbose_name='Завершена')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Смена',
                'verbose_name_plural': 'Смены',
                'ordering': ['-date', 'shift_type__start_time'],
            },
        ),
        migrations.CreateModel(
            name='ShiftLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_notes', models.TextField(blank=True, verbose_name='Заметки начала смены')),
                ('end_notes', models.TextField(blank=True, verbose_name='Заметки окончания смены')),
                ('handover_notes', models.TextField(blank=True, verbose_name='Заметки передачи смены')),
                ('is_completed', models.BooleanField(default=False, verbose_name='Завершен')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата завершения')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shift_log.employee', verbose_name='Создан')),
                ('shift', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='shift_log.shift', verbose_name='Смена')),
            ],
            options={
                'verbose_name': 'Журнал смены',
                'verbose_name_plural': 'Журналы смен',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название')),
                ('description', models.TextField(verbose_name='Описание')),
                ('priority', models.IntegerField(choices=[(1, 'Низкий'), (2, 'Средний'), (3, 'Высокий'), (4, 'Критический')], default=2, verbose_name='Приоритет')),
                ('status', models.CharField(choices=[('pending', 'Ожидает'), ('in_progress', 'В работе'), ('completed', 'Завершено'), ('cancelled', 'Отменено')], default='pending', max_length=20, verbose_name='Статус')),
                ('task_type', models.CharField(choices=[('maintenance', 'Обслуживание'), ('development', 'Разработка'), ('support', 'Поддержка'), ('emergency', 'Экстренная'), ('routine', 'Рутинная')], default='routine', max_length=20, verbose_name='Тип задачи')),
                ('due_date', models.DateTimeField(verbose_name='Срок выполнения')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата завершения')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('assigned_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shift_log.employee', verbose_name='Назначен на')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_tasks', to='shift_log.employee', verbose_name='Создано')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shift_log.department', verbose_name='Отдел')),
                ('shift', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shift_log.shift', verbose_name='Смена')),
            ],
            options={
                'verbose_name': 'Задание',
                'verbose_name_plural': 'Задания',
                'ordering': ['-priority', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TaskReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_text', models.TextField(verbose_name='Текст отчета')),
                ('status', models.CharField(choices=[('pending', 'Ожидает'), ('in_progress', 'В работе'), ('completed', 'Завершено'), ('cancelled', 'Отменено')], max_length=20, verbose_name='Статус')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shift_log.employee', verbose_name='Сотрудник')),
                ('shift_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shift_log.shiftlog', verbose_name='Журнал смены')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shift_log.task', verbose_name='Задание')),
            ],
            options={
                'verbose_name': 'Отчет по заданию',
                'verbose_name_plural': 'Отчеты по заданиям',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ShiftType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название смены')),
                ('start_time', models.TimeField(verbose_name='Время начала')),
                ('end_time', models.TimeField(verbose_name='Время окончания')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shift_log.department', verbose_name='Отдел')),
            ],
            options={
                'verbose_name': 'Тип смены',
                'verbose_name_plural': 'Типы смен',
                'ordering': ['start_time'],
            },
        ),
        migrations.CreateModel(
            name='ShiftAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_primary', models.BooleanField(default=False, verbose_name='Основной сотрудник')),
                ('assigned_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата назначения')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shift_log.employee', verbose_name='Сотрудник')),
                ('shift', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shift_log.shift', verbose_name='Смена')),
            ],
            options={
                'verbose_name': 'Назначение на смену',
                'verbose_name_plural': 'Назначения на смены',
                'unique_together': {('shift', 'employee')},
            },
        ),
        migrations.AddField(
            model_name='shift',
            name='employees',
            field=models.ManyToManyField(through='shift_log.ShiftAssignment', to='shift_log.employee', verbose_name='Сотрудники'),
        ),
        migrations.AddField(
            model_name='shift',
            name='shift_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shift_log.shifttype', verbose_name='Тип смены'),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('task_assigned', 'Задание назначено'), ('shift_started', 'Смена началась'), ('shift_completed', 'Смена завершена'), ('task_completed', 'Задание завершено'), ('handover', 'Передача смены')], max_length=20, verbose_name='Тип уведомления')),
                ('title', models.CharField(max_length=200, verbose_name='Заголовок')),
                ('message', models.TextField(verbose_name='Сообщение')),
                ('is_read', models.BooleanField(default=False, verbose_name='Прочитано')),
                ('sent_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата отправки')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата прочтения')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shift_log.employee', verbose_name='Получатель')),
            ],
            options={
                'verbose_name': 'Уведомление',
                'verbose_name_plural': 'Уведомления',
                'ordering': ['-sent_at'],
            },
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='attachments/', verbose_name='Файл')),
                ('filename', models.CharField(max_length=255, verbose_name='Имя файла')),
                ('content_type', models.CharField(max_length=100, verbose_name='Тип контента')),
                ('file_size', models.IntegerField(verbose_name='Размер файла')),
                ('attachment_type', models.CharField(choices=[('task', 'Задание'), ('shift_log', 'Журнал смены'), ('task_report', 'Отчет по заданию')], max_length=20, verbose_name='Тип вложения')),
                ('object_id', models.IntegerField(verbose_name='ID объекта')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата загрузки')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shift_log.employee', verbose_name='Загружен')),
            ],
            options={
                'verbose_name': 'Вложение',
                'verbose_name_plural': 'Вложения',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=100, verbose_name='Действие')),
                ('model_name', models.CharField(max_length=100, verbose_name='Модель')),
                ('object_id', models.IntegerField(verbose_name='ID объекта')),
                ('object_repr', models.CharField(max_length=200, verbose_name='Представление объекта')),
                ('changes', models.JSONField(blank=True, null=True, verbose_name='Изменения')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Время')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Запись активности',
                'verbose_name_plural': 'Записи активности',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='shift',
            unique_together={('date', 'shift_type')},
        ),
    ]
